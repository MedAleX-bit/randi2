<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.xsd">


<!-- #############################  CONFIG for the Method Security Interceptors ##########################-->


	<!--  ============= BEGINN Method Security Interceptors ============= -->

	<!-- Configuration for Method Security Interceptor -->
	<bean id="autoProxyCreator"
		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="interceptorNames">
			<list>
				<value>trialSiteSecurity</value>
				<value>personSiteSecurity</value>
			</list>
		</property>
		<property name="beanNames">
			<list>
				<value>trialSiteDAO</value>
				<value>personDAO</value>
			</list>
		</property>
		<property name="proxyTargetClass" value="true" />
	</bean>


	<sec:authentication-manager alias="authenticationManager" />

	<bean id="trialSiteSecurity"
		class="org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptor">
		<property name="validateConfigAttributes">
			<value>true</value>
		</property>
		<property name="authenticationManager">
			<ref bean="authenticationManager" />
		</property>
		<property name="accessDecisionManager">
			<ref bean="trialSiteAccessDecisionManager" />
		</property>
		<property name="afterInvocationManager">
			<ref bean="afterInvocationManager" />
		</property>
		<property name="objectDefinitionSource">
			<value>
				de.randi2.dao.TrialSiteDaoHibernate.getAll*=ROLE_USER,ROLE_ANONYMOUS,AFTER_ACL_COLLECTION_READ
				de.randi2.dao.TrialSiteDaoHibernate.creat*=ACL_TRIALSITE_WRITE,ACL_TRIALSITE_CREATE
				de.randi2.dao.TrialSiteDaoHibernate.update*=ACL_TRIALSITE_WRITE,ACL_TRIALSITE_CREATE
			</value>
		</property>
	</bean>
	
	<bean id="personSiteSecurity"
		class="org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptor">
		<property name="validateConfigAttributes">
			<value>true</value>
		</property>
		<property name="authenticationManager">
			<ref bean="authenticationManager" />
		</property>
		<property name="accessDecisionManager">
			<ref bean="personAccessDecisionManager" />
		</property>
		<property name="afterInvocationManager">
			<ref bean="afterInvocationManager" />
		</property>
		<property name="objectDefinitionSource">
			<value>
				de.randi2.dao.PersonDaoHibernate.getAll*=ROLE_USER,ROLE_ANONYMOUS,AFTER_ACL_COLLECTION_READ
				de.randi2.dao.PersonDaoHibernate.create*=ACL_PERSON_WRITE,ACL_PERSON_CREATE
				de.randi2.dao.PersonDaoHibernate.update*=ACL_PERSON_WRITE,ACL_PERSON_CREATE
			</value>
		</property>
	</bean>
	
	<bean id="trialSecurity"
		class="org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptor">
		<property name="validateConfigAttributes">
			<value>true</value>
		</property>
		<property name="authenticationManager">
			<ref bean="authenticationManager" />
		</property>
		<property name="accessDecisionManager">
			<ref bean="trialAccessDecisionManager" />
		</property>
		<property name="afterInvocationManager">
			<ref bean="afterInvocationManager" />
		</property>
		<property name="objectDefinitionSource">
			<value>
				de.randi2.dao.PersonDaoHibernate.getAll*=ROLE_USER,ROLE_ANONYMOUS,AFTER_ACL_COLLECTION_READ
				de.randi2.dao.PersonDaoHibernate.create*=ACL_TRIAL_WRITE,ACL_TRIAL_CREATE
				de.randi2.dao.PersonDaoHibernate.update*=ACL_TRIAL_WRITE,ACL_TRIAL_CREATE				
			</value>
		</property>
	</bean>

	<!--  ============= END Method Security Interceptors ============= -->



</beans>